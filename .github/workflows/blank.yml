# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run  
on:
  push:  
    branches: [ "main" ]      
  pull_request: 
    branches: [ "main" ]    
  workflow_dispatch:

jobs:
  LLVM_build:
    strategy:
      matrix:
        arch: [arm64, x86]
    runs-on: ${{ matrix.arch == 'x86' && 'arc-runner-set-x86' || 'arc-runner-set-ampere' }}

    steps:
      - name: Log Operating System Details
        run: |
          echo "Architecture: ${{ matrix.arch }}"
          uname -a
          lsb_release -a || cat /etc/os-release
          lscpu
          
      
      - name: Checkout LLVM source code
        uses: actions/checkout@v4
        with:
          repository: llvm/llvm-project
          path: llvm-project

      - name: Set up build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build python3

      - name: Configure LLVM build
        run: |
          mkdir -p llvm-project/build
          cd llvm-project/build
          cmake -G Ninja \
            -DLLVM_ENABLE_PROJECTS="clang" \
             -DLLVM_ENABLE_RUNTIMES="libunwind;libcxx;libcxxabi" \
            -DLLVM_TARGETS_TO_BUILD="AArch64;X86" \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_ENABLE_ASSERTIONS=ON \
            ../llvm

      - name: Build LLVM
        run: |
          cd llvm-project/build
          ninja
        env:
          LLVM_PARALLEL_COMPILE_JOBS: ${{ matrix.arch == 'x86' && 8 || 8 }}

      - name: Display build information
        run: |
          echo "Architecture: ${{ matrix.arch }}"
          echo "Build completed on $(date)"

  LLVM-distribute:
    needs: LLVM_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm64, x86]

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: llvm-build-${{ matrix.arch }}
          path: llvm-build-${{ matrix.arch }}

      - name: Package LLVM binaries
        run: |
          cd llvm-build-${{ matrix.arch }}
          tar -czvf llvm-project-${{ matrix.arch }}.tar.gz .

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0-${{ matrix.arch }}
          release_name: LLVM v1.0.0 for ${{ matrix.arch }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: llvm-build-${{ matrix.arch }}/llvm-project-${{ matrix.arch }}.tar.gz
          asset_name: llvm-project-${{ matrix.arch }}.tar.gz
          asset_content_type: application/gzip
