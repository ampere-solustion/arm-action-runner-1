# This is a basic workflow to help you get started with Actions
# name: Build and Push WordPress Docker Image

# on: 
#   push:
#     branches:
#       - main 
  
# jobs: 
#   build-and-push: 
#     runs-on: arc-runner-set-ampere14 
 

#     steps:
#       - name: Check out the code
#         uses: actions/checkout@v3 

#       - name: Sleep for 60 seconds
#         run: sleep 1
      
#       - name: Check Docker status
#         run: |
#           whoami
#           sudo usermod -aG docker runner
#           ls -l /var/run/docker.sock
#           sudo chown root:docker /var/run/docker.sock
#           sudo systemctl status docker | grep "active (running)" && echo "Docker is running" || echo "Docker is NOT running"

#       - name: Check Docker status
#         run: docker info

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v3
#         with:
#           context: .
#           file: Dockerfile  
#           push: true
#           tags: ${{ secrets.DOCKER_USERNAME }}/cicd-project:arm64-latest
#           no-cache: true

#       - name: Log out from Docker Hub
#         run: docker logout


name: CICD

# Controls when the workflow will run  
on:
  push:  
    branches: [ "main" ]       
  pull_request: 
    branches: [ "main" ]    
  workflow_dispatch: 

jobs:
  LLVM_build:
    strategy:
      matrix:
        arch: [arm64]
        # arch: [arm64, x86]
        
        
    # runs-on: ${{ matrix.arch == 'x86' && 'arc-runner-set-genoa' || 'arc-runner-set-ampere14 ' }}
    # runs-on: ${{ matrix.arch == 'x86' && 'arc-runner-set-x86' || 'arc-runner-set-ampere' }}

    #   build-and-push: 
    runs-on: arc-runner-set-ampere14 

    steps:
      - name: Log Operating System Details
        run: |
          echo "Architecture: ${{ matrix.arch }}"
          uname -a
          lsb_release -a || cat /etc/os-release
          lscpu
      
      - name: Checkout LLVM source code
        uses: actions/checkout@v4
        with:
          repository: llvm/llvm-project
          path: llvm-project

      - name: Set up build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build python3

      - name: Configure LLVM build
        run: |
          mkdir -p llvm-project/build
          cd llvm-project/build
          cmake -G Ninja \
            -DLLVM_ENABLE_PROJECTS="clang" \
             -DLLVM_ENABLE_RUNTIMES="libunwind;libcxx;libcxxabi" \
            -DLLVM_TARGETS_TO_BUILD="AArch64;X86" \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_ENABLE_ASSERTIONS=ON \
            ../llvm

      - name: Build LLVM
        run: |
          cd llvm-project/build
          ninja
        env:
          LLVM_PARALLEL_COMPILE_JOBS: ${{ matrix.arch == 'x86' && 8 || 8 }}

      - name: Display build information
        run: |
          echo "Architecture: ${{ matrix.arch }}"
          echo "Build completed on $(date)"


  # deploy:
  #   needs: LLVM_build
  #   strategy:
  #     matrix:
  #       arch: [arm64]
  #   runs-on: arm64-github-runner
  #   # runs-on: arc-runner-set-ampere

  #   steps:

  #     - name: List root directory contents
  #       run: |
  #         ls -la
  #         lscpu
    
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: List repository contents
  #       run: |
  #         ls -la $GITHUB_WORKSPACE
  #         pwd
  #     - name: Set up Docker daemon
  #       run: |
  #         docker info

